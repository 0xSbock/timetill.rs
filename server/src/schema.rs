table! {
    use diesel::sql_types::*;
    use diesel_geometry::sql_types::*;

    /// Representation of the `event_attendees` table.
    ///
    /// (Automatically generated by Diesel.)
    event_attendees (attendee_id, event_id) {
        /// The `attendee_id` column of the `event_attendees` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        attendee_id -> Int4,
        /// The `event_id` column of the `event_attendees` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        event_id -> Int4,
        /// The `event_date` column of the `event_attendees` table.
        ///
        /// Its SQL type is `Timestamptz`.
        ///
        /// (Automatically generated by Diesel.)
        event_date -> Timestamptz,
        /// The `recurring_attendee` column of the `event_attendees` table.
        ///
        /// Its SQL type is `Bool`.
        ///
        /// (Automatically generated by Diesel.)
        recurring_attendee -> Bool,
    }
}

table! {
    use diesel::sql_types::*;
    use diesel_geometry::sql_types::*;

    /// Representation of the `event_organisers` table.
    ///
    /// (Automatically generated by Diesel.)
    event_organisers (organiser_id, event_id) {
        /// The `organiser_id` column of the `event_organisers` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        organiser_id -> Int4,
        /// The `event_id` column of the `event_organisers` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        event_id -> Int4,
    }
}

table! {
    use diesel::sql_types::*;
    use diesel_geometry::sql_types::*;

    /// Representation of the `events` table.
    ///
    /// (Automatically generated by Diesel.)
    events (event_id) {
        /// The `event_id` column of the `events` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        event_id -> Int4,
        /// The `about_md` column of the `events` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        about_md -> Varchar,
        /// The `about_html` column of the `events` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        about_html -> Varchar,
        /// The `address` column of the `events` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        address -> Varchar,
        /// The `approved` column of the `events` table.
        ///
        /// Its SQL type is `Bool`.
        ///
        /// (Automatically generated by Diesel.)
        approved -> Bool,
        /// The `city` column of the `events` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        city -> Varchar,
        /// The `country` column of the `events` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        country -> Varchar,
        /// The `created` column of the `events` table.
        ///
        /// Its SQL type is `Timestamptz`.
        ///
        /// (Automatically generated by Diesel.)
        created -> Timestamptz,
        /// The `event` column of the `events` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        event -> Varchar,
        /// The `event_date` column of the `events` table.
        ///
        /// Its SQL type is `Timestamptz`.
        ///
        /// (Automatically generated by Diesel.)
        event_date -> Timestamptz,
        /// The `event_duration_amount` column of the `events` table.
        ///
        /// Its SQL type is `Int2`.
        ///
        /// (Automatically generated by Diesel.)
        event_duration_amount -> Int2,
        /// The `event_duration_step` column of the `events` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        event_duration_step -> Varchar,
        /// The `gps` column of the `events` table.
        ///
        /// Its SQL type is `Nullable<Point>`.
        ///
        /// (Automatically generated by Diesel.)
        gps -> Nullable<Point>,
        /// The `occurance_amount` column of the `events` table.
        ///
        /// Its SQL type is `Nullable<Int2>`.
        ///
        /// (Automatically generated by Diesel.)
        occurance_amount -> Nullable<Int2>,
        /// The `occurance_step` column of the `events` table.
        ///
        /// Its SQL type is `Nullable<Varchar>`.
        ///
        /// (Automatically generated by Diesel.)
        occurance_step -> Nullable<Varchar>,
        /// The `region` column of the `events` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        region -> Varchar,
        /// The `slug` column of the `events` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        slug -> Varchar,
    }
}

table! {
    use diesel::sql_types::*;
    use diesel_geometry::sql_types::*;

    /// Representation of the `users` table.
    ///
    /// (Automatically generated by Diesel.)
    users (github_id) {
        /// The `github_id` column of the `users` table.
        ///
        /// Its SQL type is `Int4`.
        ///
        /// (Automatically generated by Diesel.)
        github_id -> Int4,
        /// The `github_name` column of the `users` table.
        ///
        /// Its SQL type is `Varchar`.
        ///
        /// (Automatically generated by Diesel.)
        github_name -> Varchar,
        /// The `reviewer` column of the `users` table.
        ///
        /// Its SQL type is `Bool`.
        ///
        /// (Automatically generated by Diesel.)
        reviewer -> Bool,
        /// The `trusted` column of the `users` table.
        ///
        /// Its SQL type is `Bool`.
        ///
        /// (Automatically generated by Diesel.)
        trusted -> Bool,
    }
}

joinable!(event_attendees -> events (event_id));
joinable!(event_attendees -> users (attendee_id));
joinable!(event_organisers -> events (event_id));
joinable!(event_organisers -> users (organiser_id));

allow_tables_to_appear_in_same_query!(
    event_attendees,
    event_organisers,
    events,
    users,
);
